# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  # The Node.js orb contains a set of prepackaged CircleCI configuration you can utilize
  # Orbs reduce the amount of configuration required for common tasks.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@4.7.0

jobs:
  test:
    parameters:
      mocha-version:
        default: "9"
        description: The target version of Mocha to run tests against.
        type: string
      slonik-version:
        description: The target version of Slonik to run tests against.
        type: string
    docker:
      - image: cimg/node:lts
      - image: cimg/postgres:13.8
        environment:
          POSTGRES_PASSWORD: circleci_test
    working_directory: ~/mocha-slonik
    steps:
      - checkout
      - node/install-npm
      - node/install-packages
      - run:
          name: Install Slonik v<< parameters.slonik-version >> & Mocha v<< parameters.mocha-version >>
          command: npm i slonik@<< parameters.slonik-version >> mocha@<< parameters.mocha-version >>
      - run:
          name: Install Codecov
          command: npm i -D codecov
      - run:
          name: Compile TypeScript
          command: npm run build
      - run:
          name: Run tests
          command: |
            npm run test:coverage
            mkdir -p coverage
            npx nyc report --reporter=json > coverage/coverage.json
            npx codecov
          environment:
            DATABASE_URL: postgres://postgres:circleci_test@localhost:5432/circle_test
  build:
    docker:
      - image: cimg/node:lts
    working_directory: ~/mocha-slonik
    steps:
      - checkout
      - node/install-npm
      - node/install-packages
      - run:
          name: Build package
          command: |
            mkdir package
            npm pack --pack-destination package
      - persist_to_workspace:
          root: .
          paths:
            - "*"
      - store_artifacts:
          path: package
          destination: .
  publish:
    docker:
      - image: cimg/node:lts
    working_directory: ~/mocha-slonik
    steps:
      - attach_workspace:
          at: ~/mocha-slonik
      - run:
          name: Set NPM token
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
      - when:
          condition: << pipeline.git.tag >>
          steps:
            - run: npm publish
      - unless:
          condition: << pipeline.git.tag >>
          steps:
            - run: npm publish --dry-run

workflows:
  build-and-publish:
    jobs:
      - test:
          name: test-mocha-v<< matrix.mocha-version >>-slonik-v<< matrix.slonik-version >>
          context: test
          filters:
            tags:
              only: /v\d+(?:\.\d+){0,2}(?:-\w+(?:\.\w+)*){0,1}/
          matrix:
            parameters:
              mocha-version: ["9"]
              slonik-version: ["27", "28", "29"]
      - build:
          requires:
            - test
          filters:
            tags:
              only: /v\d+(?:\.\d+){0,2}(?:-\w+(?:\.\w+)*){0,1}/
      - publish:
          context: npm
          requires:
            - build
          filters:
            branches:
              only: master
            tags:
              only: /v\d+(?:\.\d+){0,2}(?:-\w+(?:\.\w+)*){0,1}/
